"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6602],{4137:function(e,t,n){n.d(t,{Zo:function(){return k},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},k=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,k=o(e,["components","mdxType","originalType","parentName"]),d=c(n),u=a,m=d["".concat(i,".").concat(u)]||d[u]||s[u]||l;return n?r.createElement(m,p(p({ref:t},k),{},{components:n})):r.createElement(m,p({ref:t},k))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,p=new Array(l);p[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,p[1]=o;for(var c=2;c<l;c++)p[c]=n[c];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7335:function(e,t,n){n.r(t),n.d(t,{assets:function(){return k},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return s}});var r=n(7462),a=n(3366),l=(n(7294),n(4137)),p=["components"],o={id:"tcp_ip-2_1",title:"\u534f\u8bae\u5206\u6790--Wireshark & TCP\u7684\u53cc\u7aef\u6570\u636e\u5305\u5206\u6790",date:new Date("2021-11-16T00:00:00.000Z"),authors:"\u9cb8\u8bed",tags:["\u534f\u8bae","tcp/ip","\u534f\u8bae\u5206\u6790","TCP"]},i=void 0,c={unversionedId:"skill/protocol/tcp_ip/tcp_ip-2_1",id:"skill/protocol/tcp_ip/tcp_ip-2_1",title:"\u534f\u8bae\u5206\u6790--Wireshark & TCP\u7684\u53cc\u7aef\u6570\u636e\u5305\u5206\u6790",description:"\u4f7f\u7528 Wireshark \u5bf9TCP\u534f\u8bae\u7684\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u6570\u636e\u7684\u6293\u53d6\u5206\u6790",source:"@site/docs\\skill\\protocol\\tcp_ip\\2_1_\u534f\u8bae\u5206\u6790--Wireshark & TCP\u7684\u53cc\u7aef\u6570\u636e\u5305\u5206\u6790.md",sourceDirName:"skill/protocol/tcp_ip",slug:"/skill/protocol/tcp_ip/tcp_ip-2_1",permalink:"/docs/skill/protocol/tcp_ip/tcp_ip-2_1",draft:!1,tags:[{label:"\u534f\u8bae",permalink:"/docs/tags/\u534f\u8bae"},{label:"tcp/ip",permalink:"/docs/tags/tcp-ip"},{label:"\u534f\u8bae\u5206\u6790",permalink:"/docs/tags/\u534f\u8bae\u5206\u6790"},{label:"TCP",permalink:"/docs/tags/tcp"}],version:"current",frontMatter:{id:"tcp_ip-2_1",title:"\u534f\u8bae\u5206\u6790--Wireshark & TCP\u7684\u53cc\u7aef\u6570\u636e\u5305\u5206\u6790",date:"2021-11-16T00:00:00.000Z",authors:"\u9cb8\u8bed",tags:["\u534f\u8bae","tcp/ip","\u534f\u8bae\u5206\u6790","TCP"]},sidebar:"skill",previous:{title:"TCP/IP",permalink:"/docs/category/tcpip"},next:{title:"\u901a\u4fe1\u5b9e\u73b0--Linux\u7684TCP&UDP\u534f\u8bae\u4f7f\u7528\u903b\u8f91\u53ca\u6e90\u7801",permalink:"/docs/skill/protocol/tcp_ip/tcp_ip-9_1"}},k={},s=[{value:"(\u4e00) \u76ee\u6807&amp;\u65b9\u6cd5",id:"\u4e00-\u76ee\u6807\u65b9\u6cd5",level:2},{value:"(\u4e09) \u6b65\u9aa4",id:"\u4e09-\u6b65\u9aa4",level:2},{value:"\u4e00. \u5b9e\u73b0TCP\u901a\u4fe1( TCP\u6e90\u7801 - \u6587\u672b\u9644 )",id:"\u4e00-\u5b9e\u73b0tcp\u901a\u4fe1-tcp\u6e90\u7801---\u6587\u672b\u9644-",level:3},{value:"\u4e8c. \u83b7\u53d6",id:"\u4e8c-\u83b7\u53d6",level:3},{value:"1. \u9009\u62e9(\u7f51\u5361)\u901a\u9053",id:"1-\u9009\u62e9\u7f51\u5361\u901a\u9053",level:4},{value:"2. \u8fc7\u6ee4 + \u6293\u53d6",id:"2-\u8fc7\u6ee4--\u6293\u53d6",level:4},{value:"\u4e09. \u5206\u6790",id:"\u4e09-\u5206\u6790",level:3},{value:"1. \u7b80\u8981\u4fe1\u606f",id:"1-\u7b80\u8981\u4fe1\u606f",level:4},{value:"2. \u62c6\u89e3",id:"2-\u62c6\u89e3",level:4},{value:"&lt;1&gt;\u4e09\u6b21&quot;\u63e1\u624b&quot;",id:"1\u4e09\u6b21\u63e1\u624b",level:5},{value:"&lt;2&gt;\u4f20\u8f93\u6570\u636e",id:"2\u4f20\u8f93\u6570\u636e",level:5},{value:"&lt;3&gt;\u56db\u6b21&quot;\u6325\u624b&quot;",id:"3\u56db\u6b21\u6325\u624b",level:5}],d={toc:s};function u(e){var t=e.components,n=(0,a.Z)(e,p);return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u4f7f\u7528 Wireshark \u5bf9TCP\u534f\u8bae\u7684\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u6570\u636e\u7684\u6293\u53d6\u5206\u6790"),(0,l.kt)("h2",{id:"\u4e00-\u76ee\u6807\u65b9\u6cd5"},"(\u4e00) \u76ee\u6807&\u65b9\u6cd5"),(0,l.kt)("p",null,"\u4e3a\u4e86\u53ef\u4ee5\u66f4\u6df1\u5165,\u66f4\u76f4\u89c2\u7684",(0,l.kt)("strong",{parentName:"p"},"\u7406\u89e3TCP\u901a\u4fe1"),"\u539f\u7406,",(0,l.kt)("strong",{parentName:"p"},"\u7406\u89e3TCP\u6570\u636e\u6bb5\u683c\u5f0f"),'\uff0c\u672c\u6587\u5bf9 -- \u5b57\u7b26"A"\u901a\u8fc7',(0,l.kt)("strong",{parentName:"p"},"TCP\u534f\u8bae"),"\u4f20\u8f93\u7684",(0,l.kt)("strong",{parentName:"p"},"\u6570\u636e\u5305"),"\u8fdb\u884c",(0,l.kt)("strong",{parentName:"p"},"\u5206\u6790")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"==",(0,l.kt)("strong",{parentName:"p"},"TCP\u6570\u636e\u6bb5\u683c\u5f0f"),"=="),(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/04e0c0b27f104cf8bbb05f2cf01c120b.PNG?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5pyq6Ze7wrflubvop4k=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center",alt:"TCP\u6570\u636e\u6bb5\u683c\u5f0f"})),(0,l.kt)("h2",{parentName:"blockquote",id:"\u4e8c-\u5e73\u53f0"},"(\u4e8c) \u5e73\u53f0"),(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},"Linux - \u5b9e\u73b0TCP\u901a\u4fe1"),(0,l.kt)("li",{parentName:"ul"},"Wireshark - \u5b9e\u65f6\u6355\u83b7TCP\u4f20\u5165\u548c\u4f20\u51fa\u6570\u636e\u5305"),(0,l.kt)("li",{parentName:"ul"},"\u5b89\u88c5\u5305\n",(0,l.kt)("a",{parentName:"li",href:"https://1.na.dl.wireshark.org/win64/Wireshark-win64-3.4.9.exe"},"\u5b98\u65b9 - win64-3.4.9.exe"),(0,l.kt)("a",{parentName:"li",href:"https://1.na.dl.wireshark.org/osx/Wireshark%203.4.9%20Intel%2064.dmg"},"\u5b98\u65b9 - macOS Intel 64-bit.dmg"),(0,l.kt)("a",{parentName:"li",href:"https://1.na.dl.wireshark.org/src/wireshark-3.4.9.tar.xz"},"\u5b98\u65b9 - Source Code")),(0,l.kt)("li",{parentName:"ul"},"\u6587\u7ae0 ( \u8bf7\u81ea\u884c\u8bc4\u6d4b! )\n",(0,l.kt)("a",{parentName:"li",href:"https://blog.csdn.net/magiclyj/article/details/77231707"},"ubuntu\u4e0b\u5b89\u88c5-link1"),(0,l.kt)("a",{parentName:"li",href:"https://linux.cn/article-11987-1.html"},"ubuntu\u4e0b\u5b89\u88c5-link2")))),(0,l.kt)("h2",{id:"\u4e09-\u6b65\u9aa4"},"(\u4e09) \u6b65\u9aa4"),(0,l.kt)("h3",{id:"\u4e00-\u5b9e\u73b0tcp\u901a\u4fe1-tcp\u6e90\u7801---\u6587\u672b\u9644-"},"\u4e00. \u5b9e\u73b0TCP\u901a\u4fe1( TCP\u6e90\u7801 - \u6587\u672b\u9644 )"),(0,l.kt)("p",null,"\u4f20\u8f93\u7684\u6570\u636e\u4e3a ",(0,l.kt)("strong",{parentName:"p"},'\u5355\u5b57\u7b26 "A"')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"==\u6ce8\u610f== "),(0,l.kt)("ol",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ol"},"TCP_Client.c \u6e90\u7801\u4e2d\u670d\u52a1\u5668 IP \u7684\u66f4\u6362"),(0,l.kt)("li",{parentName:"ol"},"\u6ce8\u610f\u53cc\u7aef\u8981\u5728",(0,l.kt)("strong",{parentName:"li"},"\u540c\u4e00\u7f51\u6bb5"),"\u5185\u901a\u4fe1"))),(0,l.kt)("h3",{id:"\u4e8c-\u83b7\u53d6"},"\u4e8c. \u83b7\u53d6"),(0,l.kt)("h4",{id:"1-\u9009\u62e9\u7f51\u5361\u901a\u9053"},"1. \u9009\u62e9(\u7f51\u5361)\u901a\u9053"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u4e00\u822c\u60c5\u51b5\u4e0b\u662f \u5ba2\u6237\u7aef\u4e0e\u90a3\u4e2aIP\u901a\u4fe1 \u7528\u5230\u90a3\u4e2a\u7f51\u5361,\u9009\u62e9\u54ea\u4e2a\u5373\u53ef\n\u4f46\u662f\u5982\u679c\u4f60\u662f==\u672c\u5730\u56de\u73af\u6570\u636e==\u7684\u8bdd,\u6570\u636e\u4e0d\u8d70\u7f51\u5361,\u6240\u4ee5\u9009\u62e9\u865a\u62df\u7f51\u5361")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"<1>  \u65b9\u5f0f\u4e00  \u5f00\u542f\u8f6f\u4ef6\u9ed8\u8ba4\u5f39\u51fa  \u53cc\u51fb\u9009\u62e9"),"  "),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/9e3d3d8ab249434ebc101acd86de71e6.PNG?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5pyq6Ze7wrflubvop4k=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center",alt:"\u9009\u62e9\u901a\u9053"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"<2>  \u65b9\u5f0f\u4e8c   \u83dc\u5355\u680f-\u6355\u83b7-\u9009\u9879"),"\n",(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/4c059bbc3dd7407cb2dd5d27e3c7a74a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5pyq6Ze7wrflubvop4k=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center",alt:"\u83dc\u5355\u680f"}),"\n",(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/ff0bf3ba02974797898f4a31d7cc7690.PNG?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5pyq6Ze7wrflubvop4k=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center",alt:"\u9009\u62e9\u865a\u62df\u7f51\u5361"})),(0,l.kt)("h4",{id:"2-\u8fc7\u6ee4--\u6293\u53d6"},"2. \u8fc7\u6ee4 + \u6293\u53d6"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"(1) \u8fc7\u6ee4\u5f15\u7528\u6307\u4ee4")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"tcp.port == 8080    //\u8bb0\u5f97\u56de\u8f66\n//\u8fd9\u91cc\u7684\u7aef\u53e3\u53f7\u662f\u6211\u7684\n//\u4f60\u9700\u8981\u81ea\u884c\u66f4\u6539\u6210\u548c\u4f60\u7684\u7a0b\u5e8f\u5185\u4e00\u81f4\n")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/372ebfe0af964917b338cce099271c1e.PNG#pic_center",alt:"\u8fc7\u6ee4"})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"(2) \u8bbe\u7f6e\u597d\u8fc7\u6ee4\u540e\u5f00\u542f\u6293\u53d6\u6309\u94ae")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u672c\u7a0b\u5e8f\u5b9e\u73b0\u7684\u6548\u679c\u662f"),(0,l.kt)("ul",{parentName:"blockquote"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},'tcp Client \u53d1\u9001\u5b57\u7b26 " A " \u7ed9 Server')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},'tcp Server \u63a5\u6536\u5230\u540e\u5c06 " A " \u8fd4\u56de Client '),(0,l.kt)("p",{parentName:"li"},"\u5bf9\u5e94\u6570\u636e\u5305\u5171\u6709 11 \u5305")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},'3\u5305"\u63e1\u624b" + 4\u5305\u6570\u636e + 4\u5305"\u6325\u624b"')))),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/005fd49290ea499b9be5ee8bd7d347a0.PNG#pic_center",alt:"\u5f00\u59cb\u6293\u53d6\u6570\u636e\u5305"}),"\n",(0,l.kt)("strong",{parentName:"p"},"(3) \u8fd0\u884c\u7a0b\u5e8f -- \u5148\u8fd0\u884c\u670d\u52a1\u7aef,\u5728\u8fd0\u884c\u5ba2\u6237\u7aef -- \u6210\u529f\u63a5\u6536\u6570\u636e\u540e"),"\n",(0,l.kt)("strong",{parentName:"p"},"(4) \u70b9\u51fb\u7ed3\u675f\u6309\u94ae,\u5f00\u59cb\u5206\u6790"),"\n",(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/1e35eae58e7d4c3199fb905cbba76748.PNG#pic_center",alt:"\u7ed3\u675f\u6293\u53d6"})),(0,l.kt)("h3",{id:"\u4e09-\u5206\u6790"},"\u4e09. \u5206\u6790"),(0,l.kt)("h4",{id:"1-\u7b80\u8981\u4fe1\u606f"},"1. \u7b80\u8981\u4fe1\u606f"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/00701c192d724ce9a59ab3f98b36757c.PNG?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5pyq6Ze7wrflubvop4k=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center",alt:"\u5168\u90e8\u6570\u636e\u5305"})),(0,l.kt)("p",null,": -------------------------------- ",(0,l.kt)("strong",{parentName:"p"},"( \u8be6\u7ec6\u8bf7\u53cc\u51fb\u6253\u5f00\u6293\u53d6\u7684\u6570\u636e\u5305\u81ea\u884c\u89e3\u8bfb )"),"--------------------------------"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u8f6f\u4ef6\u663e\u793a\u7684\u6570\u636e\u680f\u975e\u5e38\u7684\u76f4\u89c2\u7684\u6807\u660e\u4e86\u5404\u79cd\u5173\u952e\u6570\u636e")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/88f823dce8a245cca04fc9a5f9fedb6d.png#pic_center",alt:"\u5728\u8fd9\u91cc\u63d2\u5165\u56fe\u7247\u63cf\u8ff0"})),(0,l.kt)("blockquote",null,(0,l.kt)("table",{parentName:"blockquote"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u542b\u4e49"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"No."),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u636e\u5305\u7f16\u53f7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Times"),(0,l.kt)("td",{parentName:"tr",align:null},"\u65f6\u95f4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Source"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6e90IP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Destination"),(0,l.kt)("td",{parentName:"tr",align:null},"\u76ee\u6807IP")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Protocol"),(0,l.kt)("td",{parentName:"tr",align:null},"\u534f\u8bae")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Length"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5305\u957f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Info"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5176\u4ed6\u4fe1\u606f"))))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"==Info== \u7684\u5173\u952e\u4fe1\u606f")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u9996\u90e8\u4fe1\u606f")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6e90\u7aef\u53e3\u53f7(\u524d) -> \u76ee\u6807\u7aef\u53e3\u53f7(\u540e)\nSeq -- \u5e8f\u5217\u53f7  \u8868\u793a\u53d1\u9001\u6570\u636e\u7684\u4f4d\u7f6e,\u6bcf\u53d1\u4e00\u5b57\u8282\u6570\u636e +1\nWin -- \u7a97\u53e3\u5927\u5c0f"),(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("strong",{parentName:"p"},"\u9996\u90e8 -- \u63a7\u5236\u4f4d( Control Flag )"),"\nACK -- ==1 \u5e94\u7b54\u6709\u6548, \u8868\u793a\u5df2\u63a5\u6536\nSYN -- ==1 \u5e0c\u671b\u5efa\u7acb\u8fde\u63a5\nPSH -- ==1 \u5e0c\u671b\u7acb\u523b\u4f20\u6570\u636e,==0 \u5e0c\u671b\u5148\u7f13\u5b58\nFIN -- ==1 \u5e0c\u671b\u65ad\u5f00\u8fde\u63a5")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u9996\u90e8 -- \u9009\u9879( Options )")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"WS -- Window Scale\nSACK_PERM -- SACK Permitted")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u6570\u636e\u4fe1\u606f")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Len -- \u6570\u636e\u957f\u5ea6\nMSS -- \u53ef\u53d1\u9001\u6700\u5927\u957f\u5ea6")),(0,l.kt)("h4",{id:"2-\u62c6\u89e3"},"2. \u62c6\u89e3"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u7531\u4e8e\u672c\u4eba\u662f\u5b9e\u73b0\u7684==\u672c\u5730\u56de\u73af==,\u6240\u4ee5\n60770\u8868\u793aClient\n8080\u8868\u793aServer")),(0,l.kt)("h5",{id:"1\u4e09\u6b21\u63e1\u624b"},'<1>\u4e09\u6b21"\u63e1\u624b"'),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u76ee\u7684")," : \u5efa\u7acb\u8fde\u63a5 -- \u5173\u952e\u70b9\u5df2\u6807\u6ce8\n",(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/a8368876cc304853bbc39837877477a4.PNG#pic_center",alt:"\u4e09\u6b21\u63e1\u624b"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u200b\t\t==\u4ece\u6b64\u5f00\u59cb==\nNo. 53-55"),(0,l.kt)("ol",{parentName:"blockquote",start:53},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Client \u5411 Server \u53d1\u51fa\u8bf7\u6c42\u8fde\u63a5 -- SYN")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Server  \u56de\u5e94 Client -- ACK,\u786e\u8ba4\u6536\u5230\n\u5e76\u4e14,\u53d1\u51fa\u8fde\u63a5\u8bf7\u6c42 -- SYN")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Client \u5411 Server \u56de\u590d -- ACK,\u786e\u8ba4\u6536\u5230")))),(0,l.kt)("h5",{id:"2\u4f20\u8f93\u6570\u636e"},"<2>\u4f20\u8f93\u6570\u636e"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u76ee\u7684")," : \u4f20\u8f93\u6570\u636e -- \u5173\u952e\u70b9\u5df2\u6807\u6ce8\n",(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/ae647d48f1bd4354b9cd064e8a24b50c.PNG#pic_center",alt:"\u4f20\u8f93\u6570\u636e"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"No. 56-57"),(0,l.kt)("ol",{parentName:"blockquote",start:56},(0,l.kt)("li",{parentName:"ol"},"Client \u5411 Server \u53d1\u9001\u6570\u636e -- PSH\n\u53ca,\u91cd\u590d\u4e00\u6b21 No.  54 \u7684\u8bf7\u6c42\u5df2\u6536\u5230(No. 55)")),(0,l.kt)("blockquote",{parentName:"blockquote"},(0,l.kt)("p",{parentName:"blockquote"},"Len == 1    \u56e0\u4e3a\u53d1\u9001\u4e00\u4e2a\u5b57\u8282\u6570\u636e\n57. Server \u5411 Client \u56de\u5e94 -- ACK,\u786e\u8ba4\u6536\u5230"))),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"No. 58-59"),(0,l.kt)("ol",{parentName:"blockquote",start:58},(0,l.kt)("li",{parentName:"ol"},"Server \u5411 Client \u53d1\u9001\u6570\u636e -- PSH\n\u53ca,\u91cd\u590d\u4e00\u6b21 No. 56 \u7684\u8bf7\u6c42\u5df2\u6536\u5230(No. 57)",(0,l.kt)("blockquote",{parentName:"li"},(0,l.kt)("p",{parentName:"blockquote"},"Len == 1    \u56e0\u4e3a\u53d1\u9001\u4e00\u4e2a\u5b57\u8282\u6570\u636e"))),(0,l.kt)("li",{parentName:"ol"},"Client \u5411 Server \u56de\u5e94 -- ACK,\u786e\u8ba4\u6536\u5230"))),(0,l.kt)("h5",{id:"3\u56db\u6b21\u6325\u624b"},'<3>\u56db\u6b21"\u6325\u624b"'),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u76ee\u7684")," : \u65ad\u5f00\u8fde\u63a5 -- \u5173\u952e\u70b9\u5df2\u6807\u6ce8\n",(0,l.kt)("img",{parentName:"p",src:"https://img-blog.csdnimg.cn/ea2464cd48074032888ccb081a4485a8.PNG#pic_center",alt:"\u56db\u6b21\u6325\u624b"})),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"No. 60-63"),(0,l.kt)("ol",{parentName:"blockquote",start:60},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Client \u5411 Server \u53d1\u51fa\u65ad\u5f00\u8fde\u63a5\u8bf7\u6c42 -- FIN\n\u53ca,\u91cd\u590d\u4e00\u6b21 No. 58 \u7684\u8bf7\u6c42\u5df2\u6536\u5230(No. 59)")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Server \u5411 Client \u56de\u5e94 -- ACK,\u786e\u8ba4\u6536\u5230")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Server \u5411 Client \u53d1\u51fa\u65ad\u5f00\u8fde\u63a5\u8bf7\u6c42 -- FIN\n\u53ca,\u91cd\u590d\u4e00\u6b21 No. 60 \u7684\u8bf7\u6c42\u5df2\u6536\u5230(No. 61)")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Client \u5411 Server\u56de\u5e94 -- ACK,\u786e\u8ba4\u6536\u5230"))),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre"},"==\u5230\u6b64\u7ed3\u675f==\n")),(0,l.kt)("h4",{parentName:"blockquote",id:"3-ack---seq-\u53d8\u5316"},"3. ACK  & Seq \u53d8\u5316"),(0,l.kt)("p",{parentName:"blockquote"},"( \u5f00\u59cb\u63e1\u624b\u7b2c\u4e00\u5305 ACK == 0 , Seq == 0 )--Client"),(0,l.kt)("p",{parentName:"blockquote"},"( \u5f00\u59cb\u63e1\u624b\u7b2c\u4e8c\u5305  ACK == 1 , Seq == 0 )--Serve")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u4e00\u65e6 -  \u56de\u5e94\u4e0a\u4e00\u5305\u6570\u636e -  \u786e\u8ba4\u63a5\u6536\u540e"),(0,l.kt)("blockquote",{parentName:"blockquote"},(0,l.kt)("p",{parentName:"blockquote"},"\u4e0b\u4e00\u5305\u6570\u636e\u7684 Seq = \u5f53\u524dACK\n\u4e0b\u4e00\u5305\u6570\u636e\u7684 ACK+1"),(0,l.kt)("h2",{parentName:"blockquote",id:"\u56db-\u7ed3\u8bed"},"(\u56db) \u7ed3\u8bed"),(0,l.kt)("p",{parentName:"blockquote"},"\u613f\u5927\u5bb6\u524d\u7a0b\u53ef\u5954,\u5c81\u6708\u53ef\u5fc6!"),(0,l.kt)("h2",{parentName:"blockquote",id:"-------------tcp\u6e90\u7801"},"-------------TCP\u6e90\u7801"),(0,l.kt)("h3",{parentName:"blockquote",id:"tcp_clientc"},"tcp_client.c"),(0,l.kt)("pre",{parentName:"blockquote"},(0,l.kt)("code",{parentName:"pre",className:"language-c"},"#include <stdio.h>\n#include <unistd.h>\n#include <string.h>\n#include <stdlib.h>\n")))),(0,l.kt)("p",null,"#include <arpa/inet.h>\n#include <sys/socket.h>\n#include <netinet/in.h>"),(0,l.kt)("p",null,"/** "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"@berief: \u4e3b\u51fd\u6570,\u5efa\u7acbtcp_client.c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"@param:   argc    \u7b2c\u51e0\u4e2a\u53c2\u6570")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"@param:   *arrgv[]    \u53c2\u6570")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"@rote:   \u53c2\u6570\u53ef\u4ee5\u4f7f\u7528\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"@return: 0\n",(0,l.kt)("em",{parentName:"p"},"/\nint main(int argc, char "),"argv[])\n{\n// while (1)\n// {",(0,l.kt)("br",{parentName:"p"}),"\n",'unsigned short port = 8080;  //\u7aef\u53e3\u53f7\nchar *server_ip = "192.168.20.61";  //\u670d\u52a1\u5668ip\nchar send_buf',"[512]",' = "A";\nchar recv_buf',"[512]",' = "";\nint sockfd = 0;  //\u5957\u63a5\u5b57\u6587\u4ef6\u6807\u8bc6\u7b26\nint err_log = 0;  //\u9519\u8bef\u8fd4\u56de\nstruct sockaddr_in server_addr;  //tcp\u901a\u4fe1\u4e2d\u670d\u52a1\u5668\u5730\u5740\u7ed3\u6784\u4f53'),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre"},'    if(argc > 1)\n    {\n        server_ip = argv[1];\n    }\n\n    if (argc > 2)\n    {\n        port = atoi(argv[2]);  //char --\x3e int\n    }\n\n    //\u521d\u59cb\u5316\u670d\u52a1\u5668\u5730\u5740\n    bzero(&server_addr,sizeof(server_addr));  //\u5c06\u5730\u5740\u7684\u6570\u636e\u957f\u6e05\u96f6\n    server_addr.sin_family = AF_INET;  //tcp udp\n    server_addr.sin_port = htons(port);  \n    /*\n        htons(unsigned short k)\n        \u65e0\u7b26\u53f7\u77ed\u6574\u578b\u6570\u503c --\x3e \u7f51\u7edc\u5b57\u8282\u5e8f\n        \u5927\u7aef\u6a21\u5f0f--\u9ad8\u5b57\u8282\u5b58\u653e\u5728\u5185\u5b58\u7684\u4f4e\u5730\u5740\u5904\n        --port == 0x1234\n        ----\u5185\u5b58\u4e2d       addr    addr+1  \n                        0x12    0x34\n        ----\u7f51\u7edc\u5b57\u8282\u5e8f  0x34    0x12\n    */\n    inet_pton(AF_INET, server_ip, &server_addr.sin_addr); //\u5c06\u5730\u5740\u7684\u70b9\u5206\u5341\u8fdb\u5236\u8f6c\u6362\u4e3a2\u8fdb\u5236\n\n    //\u521b\u5efa\u901a\u4fe1\u7aef\u70b9--\u5957\u63a5\u5b57\n    sockfd = socket(AF_INET,SOCK_STREAM,0);\n    if(sockfd < 0)\n    {\n        perror("socket");\n        exit(-1);\n    }\n\n    //\u94fe\u63a5\u670d\u52a1\u5668\n    err_log = connect(sockfd,(struct sockaddr*)&server_addr,sizeof(server_addr));\n    if(err_log != 0)\n    {\n        perror("connect");\n        close(sockfd);\n        exit(-1);\n    }\n\n    //\u901a\u4fe1\n    send(sockfd, send_buf, strlen(send_buf), 0);   // \u5411\u670d\u52a1\u5668\u53d1\u9001\u4fe1\u606f\n    recv(sockfd, recv_buf, sizeof(recv_buf), 0);   // \u63a5\u6536\u670d\u52a1\u5668\u53d1\u56de\u7684\u4fe1\u606f\n    printf("%s\\n", recv_buf);\n    \n    //\u7ed3\u675f\u901a\u4fe1,\u5173\u95ed\u5957\u63a5\u5b57\u6587\u4ef6\u6807\u8bc6\n    close(sockfd);\n\n    // sleep(5);\n// }\nreturn 0;\n')),(0,l.kt)("p",{parentName:"li"},"}"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'### tcp_server.c\n```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <unistd.h>\n\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n\n/** \n * @berief: \u4e3b\u51fd\u6570,\u5efa\u7acbtcp_server.c\n * @param:   argc    \u7b2c\u51e0\u4e2a\u53c2\u6570\n * @param:   *arrgv[]    \u53c2\u6570\n * @rote:   \u53c2\u6570\u53ef\u4ee5\u4f7f\u7528\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\n * @return: 0\n */\nint main(int argc, char *argv[])\n{\n    char recv_buf[2048] = "";  //\u63a5\u6536\u7f13\u5b58\u533a\n    int sockfd = 0;  //\u901a\u4fe1\u4f7f\u7528\u7684\u5957\u63a5\u5b57\u6587\u4ef6\u6807\u8bc6\u7b26\n    int connfd = 0;\n    int err_log = 0;\n    struct sockaddr_in my_addr;\n    unsigned short port = 80000;  //\u76d1\u542c\u7aef\u53e3\u53f7\n\n    //\u53ef\u4ee5\u4fee\u6539\u7aef\u53e3\u53f7\n    if(argc > 1)\n    {\n        port = atoi(argv[1]);\n    }\n    printf("TCP Server Started at port %d\\n",port);\n\n    //\u521b\u5efa\u901a\u4fe1\u4e2d\u5957\u63a5\u5b57\u6587\u4ef6\u6807\u8bc6\u7b26\n    sockfd = socket(AF_INET,SOCK_STREAM,0);\n    if(sockfd < 0)\n    {\n        perror("socket");\n        exit(-1);\n    }\n\n    //\u521d\u59cb\u5316\u670d\u52a1\u5668\u5730\u5740\n    bzero(&my_addr, sizeof(my_addr));  //\u5730\u5740\u6e05\u96f6  \n    my_addr.sin_family = AF_INET;  //\u9009\u62e9TCP/UDP\u6a21\u5f0f\n    my_addr.sin_port   = htons(port);\n    /*\n        htons(unsigned short k)\n        \u65e0\u7b26\u53f7\u77ed\u6574\u578b\u6570\u503c --\x3e \u7f51\u7edc\u5b57\u8282\u5e8f\n        \u5927\u7aef\u6a21\u5f0f--\u9ad8\u5b57\u8282\u5b58\u653e\u5728\u5185\u5b58\u7684\u4f4e\u5730\u5740\u5904\n        --port == 0x1234\n        ----\u5185\u5b58\u4e2d       addr    addr+1  \n                        0x12    0x34\n        ----\u7f51\u7edc\u5b57\u8282\u5e8f  0x34    0x12\n    */\n    my_addr.sin_addr.s_addr = htonl(INADDR_ANY);  //\u5c06\u5730\u5740\u768432\u4f4d\u65e0\u7b26\u53f7\u957f\u6574\u5f62\u8f6c\u6362\u4e3a\u7f51\u7edc\u5b57\u8282\u5e8f\n\n    //\u5957\u63a5\u5b57\u4e0e\u7aef\u53e3\u548c\u5730\u5740\u7684\u7ed1\u5b9a\n    printf("Binding server to port %d\\n", port);\n    err_log = bind(sockfd, (struct sockaddr*)&my_addr, sizeof(my_addr));\n    /** \n     * bind()\n     * \u5bf9\u5957\u63a5\u5b57-\u5730\u5740-\u7aef\u53e3\u7ed1\u5b9a\n    */\n    if( err_log != 0)\n    {\n        perror("binding");\n        close(sockfd);      \n        exit(-1);\n    }\n    err_log = listen(sockfd, 10);  //\u5957\u63a5\u5b57\u662f\u5426\u6765\u8fde\u63a5\n    /** \n     * \u53c2\u6570\u4e00   \u5957\u63a5\u5b57\n     * \u53c2\u6570\u4e8c   \u8bf7\u6c42\u961f\u5217\u4e2d\u53ef\u4ee5\u653e\u5165\u7684\u6700\u5927\u94fe\u63a5\u6570\n    */\n    if(err_log != 0)\n    {\n        perror("listen");\n        close(sockfd);      \n        exit(-1);\n    }   \n\n    printf("Waiting client...\\n");\n\n    while (1)\n    {\n        size_t recv_len = 0;\n        struct sockaddr_in client_addr;  //\u4fdd\u5b58\u5ba2\u6237\u7aef\u5730\u5740\n        char client_ip[INET_ADDRSTRLEN] = "";  //\u4fdd\u5b58\u5ba2\u6237\u7aefip\u5730\u5740\n        socklen_t cliaddr_len = sizeof(client_addr);  //\u521d\u59cb\u5316--\u5fc5\u987b\n\n        //\u83b7\u53d6\u5df2\u5efa\u7acb\u7684\u94fe\u63a5\n        connfd = accept(sockfd,(struct sockaddr*)&client_addr,&cliaddr_len);  //\u83b7\u5f97\u5df2\u5efa\u7acb\u7684\u94fe\u63a5\n        if(connfd < 0)\n        {\n            perror("accept");\n            continue;\n        }\n\n        inet_ntop(AF_INET,&client_addr.sin_addr,client_ip,INET_ADDRSTRLEN);\n        printf("client ip = %s\\n",client_ip);\n\n        //\u63a5\u6536\n        while ((recv_len = recv(connfd,recv_buf,sizeof(recv_buf),0)) > 0)\n        {\n            send(connfd,recv_buf,recv_len,0);\n        }\n\n        close(connfd);  //\u5173\u95ed\u5df2\u8fde\u63a5\u7684\u5957\u63a5\u5b57\n        printf("client closed!\\n");        \n    }\n\n    close(sockfd);\n    return 0;\n}\n')))}u.isMDXComponent=!0}}]);